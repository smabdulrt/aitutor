steps:
  # Build DashSystem API
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/dash-api-staging'
      - '-f'
      - 'DashSystem/Dockerfile'
      - '.'
    id: 'build-dash-api'

  # Build SherlockED API
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/sherlocked-api-staging'
      - '-f'
      - 'SherlockEDApi/Dockerfile'
      - 'SherlockEDApi'
    id: 'build-sherlocked-api'

  # Build MediaMixer
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/mediamixer-staging'
      - '-f'
      - 'MediaMixer/Dockerfile'
      - 'MediaMixer'
    id: 'build-mediamixer'

  # Build Frontend
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/tutor-frontend-staging'
      - '-f'
      - 'frontend/Dockerfile'
      - --build-arg
      - VITE_DASH_API_URL=${_DASH_API_URL}
      - --build-arg
      - VITE_SHERLOCKED_API_URL=${_SHERLOCKED_API_URL}
      - --build-arg
      - VITE_MEDIAMIXER_COMMAND_WS=${_MEDIAMIXER_COMMAND_WS}
      - --build-arg
      - VITE_MEDIAMIXER_VIDEO_WS=${_MEDIAMIXER_VIDEO_WS}
      - --build-arg
      - VITE_GEMINI_API_KEY=${_VITE_GEMINI_API_KEY}
      - '.'
    id: 'build-frontend'

  # Push all images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/dash-api-staging']
    id: 'push-dash-api'
    waitFor: ['build-dash-api']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/sherlocked-api-staging']
    id: 'push-sherlocked-api'
    waitFor: ['build-sherlocked-api']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/mediamixer-staging']
    id: 'push-mediamixer'
    waitFor: ['build-mediamixer']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tutor-frontend-staging']
    id: 'push-frontend'
    waitFor: ['build-frontend']

  # Deploy DashSystem API to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'dash-api-staging'
      - '--image'
      - 'gcr.io/$PROJECT_ID/dash-api-staging'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
    id: 'deploy-dash-api'
    waitFor: ['push-dash-api']
    

  # Deploy SherlockED API to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'sherlocked-api-staging'
      - '--image'
      - 'gcr.io/$PROJECT_ID/sherlocked-api-staging'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
    id: 'deploy-sherlocked-api'
    waitFor: ['push-sherlocked-api']

  # Deploy MediaMixer to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'mediamixer-staging'
      - '--image'
      - 'gcr.io/$PROJECT_ID/mediamixer-staging'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--timeout'
      - '3600'
      - '--cpu'
      - '2'
      - '--memory'
      - '2Gi'
    id: 'deploy-mediamixer'
    waitFor: ['push-mediamixer']

  # Deploy Frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'tutor-frontend-staging'
      - '--image'
      - 'gcr.io/$PROJECT_ID/tutor-frontend-staging'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
    id: 'deploy-frontend'
    waitFor: ['push-frontend']



images:
  - 'gcr.io/$PROJECT_ID/dash-api-staging'
  - 'gcr.io/$PROJECT_ID/sherlocked-api-staging'
  - 'gcr.io/$PROJECT_ID/mediamixer-staging'
  - 'gcr.io/$PROJECT_ID/tutor-frontend-staging'

substitutions:
  _VITE_GEMINI_API_KEY: 'REPLACE_IN_COMMAND'
  _DASH_API_URL: 'REPLACE_IN_COMMAND'
  _SHERLOCKED_API_URL: 'REPLACE_IN_COMMAND'
  _MEDIAMIXER_COMMAND_WS: 'REPLACE_IN_COMMAND'
  _MEDIAMIXER_VIDEO_WS: 'REPLACE_IN_COMMAND'
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

timeout: 3600s